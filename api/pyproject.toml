[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "omnicore-api"
version = "0.1.0"
description = "Modern FastAPI backend for OmniCore intelligence analysis platform"
authors = [
    {name = "OmniCore Team", email = "contact@omnicore.dev"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    # FastAPI Core
    "fastapi>=0.115.0",
    "uvicorn[standard]>=0.32.0",
    "pydantic>=2.11.5",
    "pydantic-settings>=2.9.1",
    
    # Database
    "sqlalchemy>=2.0.41",
    "alembic>=1.16.1",
    "psycopg2-binary>=2.9.10",
    "asyncpg>=0.30.0",
    "aiosqlite>=0.19.0",
    
    # Authentication & Security
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-multipart>=0.0.6",
    "email-validator>=2.1.0",
    
    # Task Queue & Cache
    "celery>=5.3.0",
    "redis>=5.2.0",
    
    # AI Integration
    "openai>=1.82.0",
    "tiktoken>=0.8.0",
    
    # Document Processing
    "python-docx>=1.1.2",
    "openpyxl>=3.1.5",
    "fpdf2>=2.8.1",
    "reportlab>=4.2.5",
    
    # Web Scraping & Data Collection
    "httpx>=0.28.1",
    "beautifulsoup4>=4.13.4",
    "lxml>=5.4.0",
    "playwright>=1.52.0",
    
    # Data Processing
    "pandas>=2.2.3",
    "numpy>=2.1.0",
    "networkx>=3.2.1,<3.4.0",
    "validators>=0.35.0",
    
    # Geographic Processing
    "geopandas>=0.14.3",
    "shapely>=2.0.3",
    "geopy>=2.4.1",
    
    # Utilities
    "python-dotenv>=1.1.0",
    "requests>=2.32.3",
    "python-dateutil>=2.9.0",
    "manubot>=0.6.1",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=8.3.5",
    "pytest-asyncio>=1.1.0",
    "pytest-cov>=6.2.1",
    "pytest-mock>=3.12.0",
    "httpx>=0.28.1",
    
    # Code Quality
    "black>=25.1.0",
    "isort>=6.0.1",
    "ruff>=0.8.0",
    "mypy>=1.15.0",
    "pre-commit>=3.8.0",
    
    # Documentation
    "mkdocs>=1.6.0",
    "mkdocs-material>=9.5.0",
]

test = [
    "pytest>=8.3.5",
    "pytest-asyncio>=1.1.0",
    "pytest-cov>=6.2.1",
    "pytest-mock>=3.12.0",
    "httpx>=0.28.1",
]

[project.urls]
Homepage = "https://github.com/omnicore/omnicore-api"
Repository = "https://github.com/omnicore/omnicore-api"
Documentation = "https://docs.omnicore.dev"

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "ai: marks tests that require AI API access",
]

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["app"]

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true