name: Pre-Deployment Validation

on:
  push:
    branches:
      - main
    paths:
      - 'frontend-react/**'
      - 'schema/**'
  pull_request:
    branches:
      - main
    paths:
      - 'frontend-react/**'
      - 'schema/**'
  workflow_dispatch:  # Allow manual trigger

jobs:
  validate:
    name: Schema & Build Validation
    runs-on: ubuntu-latest
    timeout-minutes: 10

    defaults:
      run:
        working-directory: ./frontend-react

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: './frontend-react/package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: TypeScript compilation check
        run: npm run type-check
        continue-on-error: false

      - name: Build production bundle
        run: npm run build
        env:
          NODE_ENV: production

      - name: Check bundle size
        run: |
          echo "üì¶ Bundle Size Report"
          echo "===================="
          if [ -d "dist" ]; then
            TOTAL_SIZE=$(du -sh dist | cut -f1)
            echo "Total bundle size: $TOTAL_SIZE"

            LARGE_FILES=$(find dist -type f -size +1M | wc -l)
            if [ "$LARGE_FILES" -gt 5 ]; then
              echo "‚ö†Ô∏è  Warning: $LARGE_FILES files larger than 1MB"
            else
              echo "‚úÖ Bundle size looks good"
            fi
          fi

      - name: Validate schema consistency (requires Wrangler)
        run: |
          echo "‚ÑπÔ∏è  Schema validation requires Wrangler CLI and production access"
          echo "   This step is informational only in CI"
          echo ""
          echo "To run full schema validation locally:"
          echo "  ./scripts/pre-deployment-check.sh"
        continue-on-error: true

      - name: Check for schema migration files
        run: |
          echo "üìã Schema Migration Check"
          echo "========================"
          if [ -d "../schema/migrations" ]; then
            MIGRATION_COUNT=$(ls -1 ../schema/migrations/*.sql 2>/dev/null | wc -l)
            echo "Found $MIGRATION_COUNT migration files"

            echo ""
            echo "Recent migrations:"
            ls -1t ../schema/migrations/*.sql 2>/dev/null | head -5 || echo "No migrations found"
          else
            echo "‚ö†Ô∏è  No schema/migrations directory found"
          fi

      - name: Lint check (if configured)
        run: |
          if grep -q "\"lint\"" package.json; then
            npm run lint
          else
            echo "‚ÑπÔ∏è  No lint script configured"
          fi
        continue-on-error: true

      - name: Summary
        run: |
          echo ""
          echo "‚úÖ Pre-Deployment Validation Complete!"
          echo ""
          echo "Next steps:"
          echo "1. Review build output above"
          echo "2. Run full schema validation locally:"
          echo "   cd frontend-react && ./scripts/pre-deployment-check.sh"
          echo "3. Deploy when all checks pass:"
          echo "   npm run build && wrangler pages deploy dist --project-name=researchtoolspy"

  # Optional: Add a job to run on production (requires secrets)
  production-schema-check:
    name: Production Schema Validation
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'  # Only run manually
    timeout-minutes: 5

    defaults:
      run:
        working-directory: ./frontend-react

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Wrangler
        run: npm install -g wrangler

      - name: Validate production schema
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          echo "üîç Checking production database schema..."

          # Check critical tables exist
          echo "Checking evidence_items table..."
          wrangler d1 execute researchtoolspy-prod --remote \
            --command="SELECT name FROM sqlite_master WHERE type='table' AND name='evidence_items';"

          echo "Checking ach_analyses table..."
          wrangler d1 execute researchtoolspy-prod --remote \
            --command="SELECT name FROM sqlite_master WHERE type='table' AND name='ach_analyses';"

          echo "Checking content_intelligence table..."
          wrangler d1 execute researchtoolspy-prod --remote \
            --command="SELECT name FROM sqlite_master WHERE type='table' AND name='content_intelligence';"

          echo "‚úÖ Production schema validation complete"
        continue-on-error: true

