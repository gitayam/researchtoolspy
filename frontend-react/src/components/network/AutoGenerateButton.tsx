import { useState } from 'react'
import { Button } from '@/components/ui/button'
import { Badge } from '@/components/ui/badge'
import { Sparkles } from 'lucide-react'
import { AutoGenerateDialog } from './AutoGenerateDialog'
import type { CreateRelationshipRequest } from '@/types/entities'

interface AutoGenerateButtonProps {
  relationships: CreateRelationshipRequest[]
  source: 'MOM' | 'COG' | 'CAUSEWAY' | 'MIXED'
  onComplete?: (created: number, failed: number) => void
  disabled?: boolean
  variant?: 'default' | 'outline' | 'secondary'
  size?: 'default' | 'sm' | 'lg'
  label?: string
}

export function AutoGenerateButton({
  relationships,
  source,
  onComplete,
  disabled = false,
  variant = 'outline',
  size = 'default',
  label
}: AutoGenerateButtonProps) {
  const [dialogOpen, setDialogOpen] = useState(false)

  const count = relationships.length

  const handleComplete = (created: number, failed: number) => {
    onComplete?.(created, failed)
    if (failed === 0) {
      // Auto-refresh or update UI
    }
  }

  return (
    <>
      <Button
        variant={variant}
        size={size}
        onClick={() => setDialogOpen(true)}
        disabled={disabled || count === 0}
        className="relative"
      >
        <Sparkles className="h-4 w-4 mr-2" />
        {label || 'Auto-Generate Relationships'}
        {count > 0 && (
          <Badge variant="secondary" className="ml-2">
            {count}
          </Badge>
        )}
      </Button>

      <AutoGenerateDialog
        open={dialogOpen}
        onOpenChange={setDialogOpen}
        relationships={relationships}
        source={source}
        onComplete={handleComplete}
      />
    </>
  )
}
